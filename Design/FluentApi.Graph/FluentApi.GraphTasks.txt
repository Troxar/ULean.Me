Практика «GraphViz»

GraphViz — это широко распространённый набор утилит для визуализации графов. Для описания графов они используют текстовый формат *.dot (он же в прошлом *.gv).
Вот спецификация формата dot: https://graphviz.gitlab.io/_pages/doc/info/lang.html
Пример графа в этом формате:

digraph CommentParser {
    START [color=green; shape=ellipse];
    comment [shape=box];
    START -> slash [label="'/'"];
    slash -> comment [label="'/'"];
    comment -> comment [label="other chars"];
    comment -> START [label="'\\n'"]
}

По такому описанию GraphViz может сгенерировать такую картинку:
<GraphViz.png>

Кстати, если вам когда-то в будущем понадобится визуализация графов, то экономнее не программировать это самостоятельно, а воспользоваться одним из готовых инструментов: GraphViz даёт удобную работу из командной строки, а Gephi — удобный графический интерфейс.
В этой задаче предстоит создать fluent API для задания графов в dot-формате. Чтобы можно было сконцентрироваться исключительно на fluent API, в проекте уже реализованы вспомогательные классы (Graph, DotFormatWriter и другие). Не надо повторять код уже написанный в этих классах.
Примеры использования требуемого API ищите в тесте DotGraphBuilder_Tests.

Детали

В формате dot у вершин и ребер можно указывать значения атрибутов. 
Вот полный список поддерживаемых атрибутов: https://graphviz.gitlab.io/_pages/doc/info/attrs.html
Из этого многообразия реализуйте поддержку только следующих:
-	Для вершин: color, fontsize, label и shape;
-	Для ребер: color, fontsize, label и weight.
Поскольку одна из целей fluent API — это служить документацией, то в API нигде не должно быть возможности обратиться к члену, непредусмотренному в данном контексте. Например, у вершины не должно быть возможности указать weight, а у ребра — shape. Это проверяется в секретных тестах проверяющей системы.
И как обычно, не допускайте дублирования кода в своём решении!